lua_package_path "/usr/local/openresty/lualib/?.lua;;";

server {
    listen       80;
    server_name  localhost;

    location / {
        default_type application/json;
        return 200 '{"code":0,"message":"hello, fs-project!"}';
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    location /analyse.gif {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;

        access_log off; # 关闭文件日志

        # 使用log_by_lua 包含lua代码,因为log_by_lua指令运行在请求最后且不影响proxy_pass机制
        log_by_lua '
            local cjson = require "cjson"
            local producer = require "resty.kafka.producer"

            local broker_list = {
                { host = "kafka", port = 9092 },
            }

            -- 日志内容
            local log_json = {}
            log_json["http_cookie"] = ngx.var.http_cookie
            log_json["http_referer"] = ngx.var.http_referer
            log_json["http_user_agent"] = ngx.var.http_user_agent
            log_json["http_x_forwarded_for"] = ngx.var.http_x_forwarded_for
            log_json["remote_addr"] = ngx.var.remote_addr
            log_json["request_uri"] = ngx.var.request_uri
            log_json["request_time"] = ngx.var.request_time
            log_json["server_addr"] = ngx.var.server_addr
            log_json["time_local"] = ngx.var.time_local
            local message = cjson.encode(log_json);

            local bp = producer:new(broker_list, { producer_type = "async" })
            -- 发送日志消息,send第二个参数key,用于kafka路由控制:
            -- key为nill(空)时，一段时间向同一partition写入数据
            -- 指定key，按照key的hash写入到对应的partition
            local ok, err = bp:send("fs-access-log", nil, message)

            if not ok then
                ngx.log(ngx.ERR, "kafka send err:", err)
                return
            end
        ';
    }

}
